{"version":3,"sources":["shared/components/Box/Box.module.scss","shared/components/BoxGrid/BoxGrid.module.scss","shared/components/Box/Box.tsx","shared/components/BoxGrid/BoxGrid.tsx","components/OpenSource/Libraries/Libraries.module.scss","shared/utils/getDownloadCount.ts","shared/hooks/useDownloadCount.tsx","components/OpenSource/Libraries/data.ts","components/OpenSource/Libraries/Libraries.tsx"],"names":["module","exports","sound","Howl","src","Box","props","className","styles","BoxItem","target","rel","href","onMouseEnter","play","SlideInFwdCenter","style","animationDelay","idx","children","BoxGrid","data","map","item","link","component","packageName","Error","end","format","Date","fetch","r","json","npmStatResponse","downloads","useDownloadCount","useState","count","setCount","useEffect","getDownloadCount","then","LIBRARY_DATA","package","title","description","dateCreated","LibraryBox","BoxTitle","BoxDescription","BoxDownloads","Libraries"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,QAAU,qBAAqB,IAAM,iBAAiB,iBAAmB,8BAA8B,sBAAsB,iC,qBCA/ID,EAAOC,QAAU,CAAC,QAAU,yB,2ECQtBC,EAAQ,IAAIC,OAAK,CACrBC,IAAK,CAAC,yCAwBOC,EArBiB,SAACC,GAK/B,OACE,qBAAKC,UAAWC,IAAOC,QAAvB,SACE,mBACEC,OAAO,SACPC,IAAI,aACJC,KAAI,OAAEN,QAAF,IAAEA,OAAF,EAAEA,EAAOM,KACbC,aAVU,WACdX,EAAMY,MACP,EASKP,UAAWC,IAAOO,iBAClBC,MAAO,CAAEC,eAAe,GAAD,OAAiB,GAAZX,EAAMY,IAAX,MANzB,SAQE,qBAAKX,UAAWC,IAAOH,IAAvB,SAA6BC,EAAMa,cAI1C,E,iBCTcC,IAVyB,SAACd,GAAD,OACtC,qBAAKC,UAAWC,IAAOY,QAAvB,SACGd,EAAMe,KAAKC,KAAI,SAACC,EAAML,GAAP,OACd,cAAC,EAAD,CAAeA,IAAKA,EAAKN,KAAMW,EAAKC,KAApC,SACE,cAAClB,EAAMmB,UAAP,CAAiBF,KAAMA,KADfL,EADI,KAFoB,C,qBCZxClB,EAAOC,QAAU,CAAC,WAAa,8BAA8B,SAAW,4BAA4B,eAAiB,kCAAkC,aAAe,gC,kJCQvJ,WACbyB,GADa,wFAGRA,EAHQ,sBAIL,IAAIC,MAAM,8BAJL,aAOC,aACRC,EAAMC,YAAO,IAAIC,KAAQ,cARlB,SAUGC,MAAM,yCAAD,OAHP,aAGO,YAC+BH,EAD/B,YACsCF,IAX9C,cAUPM,EAVO,gBAckCA,EAAEC,OAdpC,cAcPC,EAdO,yBAgBNA,EAAgBC,WAhBV,6C,sBCNR,IAAMC,EAAmB,SAACV,GAC/B,MAA0BW,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAUA,OAFAC,qBANa,YDGA,SAAf,mCCFIC,CAAiBf,GAAagB,MAAK,SAACV,GAClCO,EAASP,EACV,GACF,GAEe,CAACN,IAEVY,CACR,ECbYK,EAAiC,CAC5C,CACEnB,KAAM,+CACNoB,QAAS,iBACTC,MAAO,6BACPC,YAAa,yCACbC,YAAa,cAEf,CACEvB,KAAM,gDACNoB,QAAS,kBACTC,MAAO,kBACPC,YAAa,2DACbC,YAAa,cAEf,CACEvB,KAAM,mDACNoB,QAAS,qBACTC,MAAO,qBACPC,YACE,uEACFC,YAAa,e,wBChBXC,EAA4C,SAAC1C,GACjD,IAAMgC,EAAQF,EAAiB9B,EAAMiB,KAAKqB,SAE1C,OACE,sBAAKrC,UAAWC,IAAOwC,WAAvB,UACE,sBAAMzC,UAAWC,IAAOyC,SAAxB,SAAmC3C,EAAMiB,KAAKsB,QAC9C,qBAAKtC,UAAWC,IAAO0C,eAAvB,SAAwC5C,EAAMiB,KAAKuB,cACnD,uBAAMvC,UAAWC,IAAO2C,aAAxB,UAAuCb,EAAvC,kBAGL,EAMcc,UAJa,kBAC1B,cAAChC,EAAA,EAAD,CAASC,KAAMsB,EAAclB,UAAWuB,GADd,C","file":"static/js/5.99f8c9eb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BoxItem\":\"Box_BoxItem__3DVqx\",\"Box\":\"Box_Box__3upeG\",\"SlideInFwdCenter\":\"Box_SlideInFwdCenter__3TgXo\",\"slide-in-fwd-center\":\"Box_slide-in-fwd-center__3_QO2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BoxGrid\":\"BoxGrid_BoxGrid__3sh-J\"};","import { Howl } from \"howler\";\nimport React from \"react\";\nimport styles from \"./Box.module.scss\";\n\ninterface BoxProps {\n  href?: string;\n  idx: number;\n}\n\nconst sound = new Howl({\n  src: [\"assets/sounds/ui_tap-variant-01.wav\"],\n});\n\nconst Box: React.FC<BoxProps> = (props) => {\n  const onHover = () => {\n    sound.play();\n  };\n\n  return (\n    <div className={styles.BoxItem}>\n      <a\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        href={props?.href}\n        onMouseEnter={onHover}\n        className={styles.SlideInFwdCenter}\n        style={{ animationDelay: `${props.idx * 0.2}s` }}\n      >\n        <div className={styles.Box}>{props.children}</div>\n      </a>\n    </div>\n  );\n};\n\nexport default Box;\n","import React from \"react\";\nimport {\n  OpenSourceItem,\n  OpenSourceItemProps,\n} from \"../../../components/OpenSource/OpenSourceItem\";\nimport Box from \"../Box/Box\";\nimport styles from \"./BoxGrid.module.scss\";\n\ninterface BoxGridProps {\n  data: OpenSourceItem[];\n  component: React.FC<OpenSourceItemProps>;\n}\n\nconst BoxGrid: React.FC<BoxGridProps> = (props) => (\n  <div className={styles.BoxGrid}>\n    {props.data.map((item, idx) => (\n      <Box key={idx} idx={idx} href={item.link}>\n        <props.component item={item} />\n      </Box>\n    ))}\n  </div>\n);\n\nexport default BoxGrid;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LibraryBox\":\"Libraries_LibraryBox__3PE48\",\"BoxTitle\":\"Libraries_BoxTitle__2vJak\",\"BoxDescription\":\"Libraries_BoxDescription__D7nu9\",\"BoxDownloads\":\"Libraries_BoxDownloads__C885n\"};","import { format } from \"date-fns\";\n\ninterface NpmStatResponse {\n  downloads: number;\n  end: string;\n  package: string;\n  start: string;\n}\n\nexport default async function getDownloadCount(\n  packageName: string | undefined\n): Promise<number> {\n  if (!packageName) {\n    throw new Error(\"No package name specified.\");\n  }\n\n  const start = \"2012-01-15\";\n  const end = format(new Date(), \"yyyy-MM-dd\");\n\n  const r = await fetch(\n    `https://api.npmjs.org/downloads/point/${start}:${end}/${packageName}`\n  );\n\n  const npmStatResponse: NpmStatResponse = await r.json();\n\n  return npmStatResponse.downloads;\n}\n","import { useEffect, useState } from \"react\";\nimport getDownloadCount from \"../utils/getDownloadCount\";\n\nexport const useDownloadCount = (packageName: string | undefined) => {\n  const [count, setCount] = useState(0);\n\n  const init = () => {\n    getDownloadCount(packageName).then((r) => {\n      setCount(r);\n    });\n  };\n\n  useEffect(init, [packageName]);\n\n  return count;\n};\n","import { OpenSourceItem } from \"../OpenSourceItem\";\n\nexport const LIBRARY_DATA: OpenSourceItem[] = [\n  {\n    link: \"https://www.npmjs.com/package/ngx-unused-css\",\n    package: \"ngx-unused-css\",\n    title: \"Angular Unused CSS cleanup\",\n    description: \"Detect unused CSS in Angular projects.\",\n    dateCreated: \"2012-01-15\",\n  },\n  {\n    link: \"https://www.npmjs.com/package/stylelint-regex\",\n    package: \"stylelint-regex\",\n    title: \"Stylelint Regex\",\n    description: \"Full flexibility for stylelint rule creation using regex\",\n    dateCreated: \"2012-01-15\",\n  },\n  {\n    link: \"https://www.npmjs.com/package/stylelint-restrict\",\n    package: \"stylelint-restrict\",\n    title: \"Stylelint Restrict\",\n    description:\n      \"Restrict usage of color variables in SASS/SCSS only to certain files\",\n    dateCreated: \"2012-01-15\",\n  },\n];\n","import React from \"react\";\nimport BoxGrid from \"../../../shared/components/BoxGrid/BoxGrid\";\nimport { useDownloadCount } from \"../../../shared/hooks/useDownloadCount\";\nimport { OpenSourceItemProps } from \"../OpenSourceItem\";\nimport { LIBRARY_DATA } from \"./data\";\nimport styles from \"./Libraries.module.scss\";\n\nconst LibraryBox: React.FC<OpenSourceItemProps> = (props) => {\n  const count = useDownloadCount(props.item.package);\n\n  return (\n    <div className={styles.LibraryBox}>\n      <span className={styles.BoxTitle}>{props.item.title}</span>\n      <div className={styles.BoxDescription}>{props.item.description}</div>\n      <span className={styles.BoxDownloads}>{count} Downloads</span>\n    </div>\n  );\n};\n\nconst Libraries: React.FC = () => (\n  <BoxGrid data={LIBRARY_DATA} component={LibraryBox} />\n);\n\nexport default Libraries;\n"],"sourceRoot":""}