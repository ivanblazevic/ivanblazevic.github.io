{"version":3,"sources":["components/Header/Header.module.scss","components/Header/HeaderItem/HeaderItem.module.scss","components/About/About.lazy.tsx","components/Experience/Experience.lazy.tsx","components/Header/HeaderItem/HeaderItem.tsx","components/Header/Header.tsx","components/OpenSource/OpenSource.lazy.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","LazyAbout","lazy","About","props","fallback","LazyExperience","Experience","HeaderItem","className","styles","to","activeClassName","Active","icon","label","Header","data-testid","id","Logo","ProfileImage","src","alt","Title","LazyOpenSource","OpenSource","App","path","from","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,KAAO,qBAAqB,aAAe,+B,mBCA3HD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,OAAS,6B,kKCCjEC,EAAYC,gBAAK,kBAAM,gCAQdC,EAND,SAACC,GAAD,OACZ,cAAC,WAAD,CAAUC,SAAU,KAApB,SACE,cAACJ,EAAD,eAAeG,OCJbE,EAAiBJ,gBAAK,kBAAM,gCAQnBK,EANI,SAACH,GAAD,OACjB,cAAC,WAAD,CAAUC,SAAU,KAApB,SACE,cAACC,EAAD,eAAoBF,O,kCCaTI,EAT+B,SAACJ,GAAD,OAC5C,oBAAIK,UAAWC,IAAOF,WAAtB,SACE,eAAC,IAAD,CAASG,GAAIP,EAAMO,GAAIC,gBAAiBF,IAAOG,OAA/C,UACE,mBAAGJ,UAAS,sBAAiBL,EAAMU,QAClCV,EAAMW,YCcEC,EAvBU,kBACvB,sBAAKP,UAAWC,IAAOM,OAAQC,cAAY,SAA3C,UACE,cAAC,IAAD,CAAMN,GAAG,IAAT,SACE,sBAAKO,GAAIR,IAAOS,KAAhB,UACE,qBAAKV,UAAWC,IAAOU,aAAvB,SACE,qBAAKC,IAAI,kBAAkBC,IAAI,cAGjC,sBAAKJ,GAAIR,IAAOa,MAAhB,UACE,uCACA,6DAKN,+BACE,cAAC,EAAD,CAAYR,MAAM,aAAaD,KAAK,YAAYH,GAAG,gBACnD,cAAC,EAAD,CAAYI,MAAM,cAAcD,KAAK,YAAYH,GAAG,iBACpD,cAAC,EAAD,CAAYI,MAAM,WAAWD,KAAK,OAAOH,GAAG,kBCrB5Ca,EAAiBtB,gBAAK,kBAAM,gCAQnBuB,EANI,SAACrB,GAAD,OACjB,cAAC,WAAD,CAAUC,SAAU,KAApB,SACE,cAACmB,EAAD,eAAoBpB,OC4BTsB,MA1Bf,WACE,OACE,cAAC,IAAD,UACE,sBAAKjB,UAAU,MAAf,UACE,cAAC,EAAD,IAEA,qBAAKA,UAAU,uBAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkB,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,eAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,cAAZ,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAUC,KAAK,IAAIjB,GAAG,0BCZnBkB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6cc200e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__1CTzX\",\"Title\":\"Header_Title__f9_xb\",\"Logo\":\"Header_Logo__3cTtT\",\"ProfileImage\":\"Header_ProfileImage__2ZfFT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HeaderItem\":\"HeaderItem_HeaderItem__rbVo7\",\"Active\":\"HeaderItem_Active__2D1uK\"};","import React, { lazy, Suspense } from 'react';\n\nconst LazyAbout = lazy(() => import('./About'));\n\nconst About = (props: JSX.IntrinsicAttributes & { children?: React.ReactNode; }) => (\n  <Suspense fallback={null}>\n    <LazyAbout {...props} />\n  </Suspense>\n);\n\nexport default About;\n","import React, { lazy, Suspense } from 'react';\n\nconst LazyExperience = lazy(() => import('./Experience'));\n\nconst Experience = (props: JSX.IntrinsicAttributes & { children?: React.ReactNode; }) => (\n  <Suspense fallback={null}>\n    <LazyExperience {...props} />\n  </Suspense>\n);\n\nexport default Experience;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport styles from \"./HeaderItem.module.scss\";\n\ninterface HeaderItemProps {\n  label: string;\n  icon: string;\n  to: string;\n}\n\nconst HeaderItem: React.FC<HeaderItemProps> = (props) => (\n  <li className={styles.HeaderItem}>\n    <NavLink to={props.to} activeClassName={styles.Active}>\n      <i className={`Icon fas fa-${props.icon}`}></i>\n      {props.label}\n    </NavLink>\n  </li>\n);\n\nexport default HeaderItem;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./Header.module.scss\";\nimport HeaderItem from \"./HeaderItem/HeaderItem\";\n\nconst Header: React.FC = () => (\n  <nav className={styles.Header} data-testid=\"Header\">\n    <Link to=\"/\">\n      <div id={styles.Logo}>\n        <div className={styles.ProfileImage}>\n          <img src=\"profile_124.jpg\" alt=\"profile\" />\n        </div>\n\n        <div id={styles.Title}>\n          <div>ivan</div>\n          <div>blažević</div>\n        </div>\n      </div>\n    </Link>\n\n    <ul>\n      <HeaderItem label=\"Experience\" icon=\"briefcase\" to=\"/experience\" />\n      <HeaderItem label=\"Open Source\" icon=\"file-code\" to=\"/open-source\" />\n      <HeaderItem label=\"About Me\" icon=\"user\" to=\"/about\" />\n    </ul>\n  </nav>\n);\n\nexport default Header;\n","import React, { lazy, Suspense } from 'react';\n\nconst LazyOpenSource = lazy(() => import('./OpenSource'));\n\nconst OpenSource = (props: JSX.IntrinsicAttributes & { children?: React.ReactNode; }) => (\n  <Suspense fallback={null}>\n    <LazyOpenSource {...props} />\n  </Suspense>\n);\n\nexport default OpenSource;\n","import React from \"react\";\nimport { HashRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport \"./App.scss\";\nimport About from \"./components/About/About.lazy\";\nimport Experience from \"./components/Experience/Experience.lazy\";\nimport Header from \"./components/Header/Header\";\nimport OpenSource from \"./components/OpenSource/OpenSource.lazy\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <div className=\"App\">\n        <Header></Header>\n\n        <div className=\"App-router-container\">\n          <Switch>\n            <Route path=\"/about\">\n              <About />\n            </Route>\n            <Route path=\"/open-source\">\n              <OpenSource />\n            </Route>\n            <Route path=\"/experience\">\n              <Experience />\n            </Route>\n\n            <Redirect from=\"/\" to=\"experience\" />\n          </Switch>\n        </div>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}